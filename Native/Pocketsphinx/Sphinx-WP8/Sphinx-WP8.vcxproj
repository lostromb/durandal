<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="libpocketsphinx\acmod.c" />
    <ClCompile Include="libpocketsphinx\allphone_search.c" />
    <ClCompile Include="libpocketsphinx\bin_mdef.c" />
    <ClCompile Include="libpocketsphinx\blkarray_list.c" />
    <ClCompile Include="libpocketsphinx\dict.c" />
    <ClCompile Include="libpocketsphinx\dict2pid.c" />
    <ClCompile Include="libpocketsphinx\fsg_history.c" />
    <ClCompile Include="libpocketsphinx\fsg_lextree.c" />
    <ClCompile Include="libpocketsphinx\fsg_search.c" />
    <ClCompile Include="libpocketsphinx\hmm.c" />
    <ClCompile Include="libpocketsphinx\kws_detections.c" />
    <ClCompile Include="libpocketsphinx\kws_search.c" />
    <ClCompile Include="libpocketsphinx\mdef.c" />
    <ClCompile Include="libpocketsphinx\ms_gauden.c" />
    <ClCompile Include="libpocketsphinx\ms_mgau.c" />
    <ClCompile Include="libpocketsphinx\ms_senone.c" />
    <ClCompile Include="libpocketsphinx\ngram_search.c" />
    <ClCompile Include="libpocketsphinx\ngram_search_fwdflat.c" />
    <ClCompile Include="libpocketsphinx\ngram_search_fwdtree.c" />
    <ClCompile Include="libpocketsphinx\phone_loop_search.c" />
    <ClCompile Include="libpocketsphinx\pocketsphinx.c" />
    <ClCompile Include="libpocketsphinx\ps_alignment.c" />
    <ClCompile Include="libpocketsphinx\ps_lattice.c" />
    <ClCompile Include="libpocketsphinx\ps_mllr.c" />
    <ClCompile Include="libpocketsphinx\ptm_mgau.c" />
    <ClCompile Include="libpocketsphinx\s2_semi_mgau.c" />
    <ClCompile Include="libpocketsphinx\state_align_search.c" />
    <ClCompile Include="libpocketsphinx\tmat.c" />
    <ClCompile Include="libpocketsphinx\vector.c" />
    <ClCompile Include="libsphinxbase\feat\agc.c" />
    <ClCompile Include="libsphinxbase\feat\cmn.c" />
    <ClCompile Include="libsphinxbase\feat\cmn_prior.c" />
    <ClCompile Include="libsphinxbase\feat\feat.c" />
    <ClCompile Include="libsphinxbase\feat\lda.c" />
    <ClCompile Include="libsphinxbase\fe\fe_interface.c" />
    <ClCompile Include="libsphinxbase\fe\fe_noise.c" />
    <ClCompile Include="libsphinxbase\fe\fe_prespch_buf.c" />
    <ClCompile Include="libsphinxbase\fe\fe_sigproc.c" />
    <ClCompile Include="libsphinxbase\fe\fe_warp.c" />
    <ClCompile Include="libsphinxbase\fe\fe_warp_affine.c" />
    <ClCompile Include="libsphinxbase\fe\fe_warp_inverse_linear.c" />
    <ClCompile Include="libsphinxbase\fe\fe_warp_piecewise_linear.c" />
    <ClCompile Include="libsphinxbase\fe\fixlog.c" />
    <ClCompile Include="libsphinxbase\fe\yin.c" />
    <ClCompile Include="libsphinxbase\lm\fsg_model.c" />
    <ClCompile Include="libsphinxbase\lm\jsgf.c" />
    <ClCompile Include="libsphinxbase\lm\jsgf_parser.c" />
    <ClCompile Include="libsphinxbase\lm\jsgf_scanner.c" />
    <ClCompile Include="libsphinxbase\lm\lm_trie.c" />
    <ClCompile Include="libsphinxbase\lm\lm_trie_quant.c" />
    <ClCompile Include="libsphinxbase\lm\ngrams_raw.c" />
    <ClCompile Include="libsphinxbase\lm\ngram_model.c" />
    <ClCompile Include="libsphinxbase\lm\ngram_model_set.c" />
    <ClCompile Include="libsphinxbase\lm\ngram_model_trie.c" />
    <ClCompile Include="libsphinxbase\util\bio.c" />
    <ClCompile Include="libsphinxbase\util\bitarr.c" />
    <ClCompile Include="libsphinxbase\util\bitvec.c" />
    <ClCompile Include="libsphinxbase\util\blas_lite.c" />
    <ClCompile Include="libsphinxbase\util\case.c" />
    <ClCompile Include="libsphinxbase\util\ckd_alloc.c" />
    <ClCompile Include="libsphinxbase\util\cmd_ln.c" />
    <ClCompile Include="libsphinxbase\util\dtoa.c" />
    <ClCompile Include="libsphinxbase\util\err.c" />
    <ClCompile Include="libsphinxbase\util\errno.c" />
    <ClCompile Include="libsphinxbase\util\f2c_lite.c" />
    <ClCompile Include="libsphinxbase\util\filename.c" />
    <ClCompile Include="libsphinxbase\util\genrand.c" />
    <ClCompile Include="libsphinxbase\util\glist.c" />
    <ClCompile Include="libsphinxbase\util\hash_table.c" />
    <ClCompile Include="libsphinxbase\util\heap.c" />
    <ClCompile Include="libsphinxbase\util\huff_code.c" />
    <ClCompile Include="libsphinxbase\util\listelem_alloc.c" />
    <ClCompile Include="libsphinxbase\util\logmath.c" />
    <ClCompile Include="libsphinxbase\util\matrix.c" />
    <ClCompile Include="libsphinxbase\util\mmio.c" />
    <ClCompile Include="libsphinxbase\util\pio.c" />
    <ClCompile Include="libsphinxbase\util\priority_queue.c" />
    <ClCompile Include="libsphinxbase\util\profile.c" />
    <ClCompile Include="libsphinxbase\util\sbthread.c" />
    <ClCompile Include="libsphinxbase\util\slamch.c" />
    <ClCompile Include="libsphinxbase\util\slapack_lite.c" />
    <ClCompile Include="libsphinxbase\util\strfuncs.c" />
    <ClCompile Include="Output.cpp">
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">true</CompileAsWinRT>
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">true</CompileAsWinRT>
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</CompileAsWinRT>
    </ClCompile>
    <ClCompile Include="PSphinxTrigger.cpp">
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">true</CompileAsWinRT>
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">true</CompileAsWinRT>
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</CompileAsWinRT>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="libpocketsphinx\acmod.h" />
    <ClInclude Include="libpocketsphinx\allphone_search.h" />
    <ClInclude Include="libpocketsphinx\bin_mdef.h" />
    <ClInclude Include="libpocketsphinx\blkarray_list.h" />
    <ClInclude Include="libpocketsphinx\dict.h" />
    <ClInclude Include="libpocketsphinx\dict2pid.h" />
    <ClInclude Include="libpocketsphinx\fsg_history.h" />
    <ClInclude Include="libpocketsphinx\fsg_lextree.h" />
    <ClInclude Include="libpocketsphinx\fsg_search_internal.h" />
    <ClInclude Include="libpocketsphinx\hmm.h" />
    <ClInclude Include="libpocketsphinx\kws_detections.h" />
    <ClInclude Include="libpocketsphinx\kws_search.h" />
    <ClInclude Include="libpocketsphinx\mdef.h" />
    <ClInclude Include="libpocketsphinx\ms_gauden.h" />
    <ClInclude Include="libpocketsphinx\ms_mgau.h" />
    <ClInclude Include="libpocketsphinx\ms_senone.h" />
    <ClInclude Include="libpocketsphinx\ngram_search.h" />
    <ClInclude Include="libpocketsphinx\ngram_search_fwdflat.h" />
    <ClInclude Include="libpocketsphinx\ngram_search_fwdtree.h" />
    <ClInclude Include="libpocketsphinx\phone_loop_search.h" />
    <ClInclude Include="libpocketsphinx\pocketsphinx_internal.h" />
    <ClInclude Include="libpocketsphinx\ps_alignment.h" />
    <ClInclude Include="libpocketsphinx\ps_lattice_internal.h" />
    <ClInclude Include="libpocketsphinx\ptm_mgau.h" />
    <ClInclude Include="libpocketsphinx\s2_semi_mgau.h" />
    <ClInclude Include="libpocketsphinx\s3types.h" />
    <ClInclude Include="libpocketsphinx\state_align_search.h" />
    <ClInclude Include="libpocketsphinx\tied_mgau_common.h" />
    <ClInclude Include="libpocketsphinx\tmat.h" />
    <ClInclude Include="libpocketsphinx\vector.h" />
    <ClInclude Include="libsphinxbase\fe\fe_internal.h" />
    <ClInclude Include="libsphinxbase\fe\fe_noise.h" />
    <ClInclude Include="libsphinxbase\fe\fe_prespch_buf.h" />
    <ClInclude Include="libsphinxbase\fe\fe_type.h" />
    <ClInclude Include="libsphinxbase\fe\fe_warp.h" />
    <ClInclude Include="libsphinxbase\fe\fe_warp_affine.h" />
    <ClInclude Include="libsphinxbase\fe\fe_warp_inverse_linear.h" />
    <ClInclude Include="libsphinxbase\fe\fe_warp_piecewise_linear.h" />
    <ClInclude Include="libsphinxbase\lm\jsgf_internal.h" />
    <ClInclude Include="libsphinxbase\lm\jsgf_parser.h" />
    <ClInclude Include="libsphinxbase\lm\jsgf_scanner.h" />
    <ClInclude Include="libsphinxbase\lm\lm_trie.h" />
    <ClInclude Include="libsphinxbase\lm\lm_trie_quant.h" />
    <ClInclude Include="libsphinxbase\lm\ngrams_raw.h" />
    <ClInclude Include="libsphinxbase\lm\ngram_model_internal.h" />
    <ClInclude Include="libsphinxbase\lm\ngram_model_set.h" />
    <ClInclude Include="libsphinxbase\lm\ngram_model_trie.h" />
    <ClInclude Include="Output.h" />
    <ClInclude Include="PSphinxTrigger.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="libpocketsphinx\fast_ptm.txt" />
    <Text Include="libsphinxbase\fe\fe_design.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="libpocketsphinx\Makefile.am" />
    <None Include="libsphinxbase\feat\Makefile.am" />
    <None Include="libsphinxbase\fe\Makefile.am" />
    <None Include="libsphinxbase\fe\make_log_sub_table.py" />
    <None Include="libsphinxbase\fe\make_log_table.py" />
    <None Include="libsphinxbase\lm\jsgf_parser.y" />
    <None Include="libsphinxbase\lm\Makefile.am" />
    <None Include="libsphinxbase\lm\_jsgf_scanner.l" />
    <None Include="libsphinxbase\util\clapack_scrub.py" />
    <None Include="libsphinxbase\util\fortran.py" />
    <None Include="libsphinxbase\util\Makefile.am" />
    <None Include="libsphinxbase\util\make_lite.py" />
    <None Include="libsphinxbase\util\README.python" />
    <None Include="libsphinxbase\util\wrapped_routines" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{ab0b16c4-39ba-4c60-ac93-668a1da7f414}</ProjectGuid>
    <Keyword>WindowsRuntimeComponent</Keyword>
    <ProjectName>Sphinx-WP8</ProjectName>
    <RootNamespace>Sphinx_WP8</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>12.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Phone</ApplicationType>
    <ApplicationTypeRevision>8.1</ApplicationTypeRevision>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120_wp81</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v120_wp81</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v120_wp81</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <PlatformToolset>v120_wp81</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetName>PocketSphinxRntComp</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetName>PocketSphinxRntComp</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WIN32;_WIN32_WP;_CRT_SECURE_NO_WARNINGS;_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)/include;$(ProjectDir)/include/win32;$(ProjectDir);$(GeneratedFilesDir);$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
      <AdditionalUsingDirectories>$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PreprocessorDefinitions>_WINRT_DLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)/include;$(ProjectDir)/include/win32;$(ProjectDir);$(GeneratedFilesDir);$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WIN32;_WIN32_WP;_CRT_SECURE_NO_WARNINGS;_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)/include;$(ProjectDir)/include/win32;$(ProjectDir);$(GeneratedFilesDir);$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
      <AdditionalUsingDirectories>$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_WIN32;_WIN32_WP;_CRT_SECURE_NO_WARNINGS;_WINRT_DLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile>
      </PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(ProjectDir)/include;$(ProjectDir)/include/win32;$(ProjectDir);$(GeneratedFilesDir);$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CompileAsWinRT>false</CompileAsWinRT>
      <AdditionalUsingDirectories>$(AdditionalUsingDirectories)</AdditionalUsingDirectories>
      <CompileAs>Default</CompileAs>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>