
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.10.0.0
//   File : Durandal.API.LURequest_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace Durandal.API
{
    using Durandal.Common.NLP.Language;
    using Newtonsoft.Json;
    using System.Collections.Generic;

    public class LURequest
    {
        public int ProtocolVersion { get; set; }
        
        public string TextInput { get; set; }
        
        public SpeechRecognitionResult SpeechInput { get; set; }

        public ClientContext Context { get; set; }

        public bool DoFullAnnotation { get; set; }

        public string TraceId { get; set; }

        public List<string> DomainScope { get; set; }

        public QueryFlags RequestFlags { get; set; }

        public List<string> ContextualDomains { get; set; }

        public LURequest()
        {
            ProtocolVersion = 20;
            Context = new ClientContext();
            DoFullAnnotation = true;
            TraceId = "";
            DomainScope = new List<string>();
            RequestFlags = 0;
            ContextualDomains = new List<string>();
        }

        public LanguageCode Locale
        {
            get
            {
                return Context?.Locale ?? LanguageCode.UNDETERMINED;
            }
        }

        public string ReferenceDateTime
        {
            get
            {
                // TODO: If time is not present, calculate it using UtcOffset
                return (Context == null || string.IsNullOrEmpty(Context.ReferenceDateTime)) ? string.Empty : Context.ReferenceDateTime;
            }
        }
    }
} // Durandal.API
