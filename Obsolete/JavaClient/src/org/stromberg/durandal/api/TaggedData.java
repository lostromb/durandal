



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\TaggedData.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* TaggedData
*/
@SuppressWarnings("all")
public class TaggedData implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required org.stromberg.durandal.api.Sentence Utterance
    private org.stromberg.durandal.api.Sentence Utterance;

    // 2: Required vector<org.stromberg.durandal.api.SlotValue> Slots
    private java.util.ArrayList<org.stromberg.durandal.api.SlotValue> Slots;

    // 3: Required map<string, string> Annotations
    private java.util.HashMap<String, String> Annotations;

    // 4: Required float Confidence
    private float Confidence;

    /**
     * @return current value of Utterance property
     */
    public final org.stromberg.durandal.api.Sentence getUtterance() {
        return this.Utterance;
    }

    /**
     * @param value new value of Utterance property
     */
    public final void setUtterance(org.stromberg.durandal.api.Sentence value) {
        this.Utterance = value;
    }

    /**
     * @return current value of Slots property
     */
    public final java.util.ArrayList<org.stromberg.durandal.api.SlotValue> getSlots() {
        return this.Slots;
    }

    /**
     * @param value new value of Slots property
     */
    public final void setSlots(java.util.ArrayList<org.stromberg.durandal.api.SlotValue> value) {
        this.Slots = value;
    }

    /**
     * @return current value of Annotations property
     */
    public final java.util.HashMap<String, String> getAnnotations() {
        return this.Annotations;
    }

    /**
     * @param value new value of Annotations property
     */
    public final void setAnnotations(java.util.HashMap<String, String> value) {
        this.Annotations = value;
    }

    /**
     * @return current value of Confidence property
     */
    public final float getConfidence() {
        return this.Confidence;
    }

    /**
     * @param value new value of Confidence property
     */
    public final void setConfidence(float value) {
        this.Confidence = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata Utterance_metadata;
        private static final com.microsoft.bond.Metadata Slots_metadata;
        private static final com.microsoft.bond.Metadata Annotations_metadata;
        private static final com.microsoft.bond.Metadata Confidence_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("TaggedData");
            metadata.setQualified_name("org.stromberg.durandal.api.TaggedData");


            // Utterance
            Utterance_metadata = new com.microsoft.bond.Metadata();
            Utterance_metadata.setName("Utterance");
            Utterance_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // Slots
            Slots_metadata = new com.microsoft.bond.Metadata();
            Slots_metadata.setName("Slots");
            Slots_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // Annotations
            Annotations_metadata = new com.microsoft.bond.Metadata();
            Annotations_metadata.setName("Annotations");
            Annotations_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // Confidence
            Confidence_metadata = new com.microsoft.bond.Metadata();
            Confidence_metadata.setName("Confidence");
            Confidence_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Confidence_metadata.getDefault_value().setDouble_value(0);

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(Utterance_metadata);
            field.setType(org.stromberg.durandal.api.Sentence.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(Slots_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.SlotValue.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(Annotations_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_MAP);
            field.getType().setKey(new com.microsoft.bond.TypeDef());
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getKey().setId(com.microsoft.bond.BondDataType.BT_STRING);
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(Confidence_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_FLOAT);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.Utterance;
            case (short)2:
                return this.Slots;
            case (short)3:
                return this.Annotations;
            case (short)4:
                return this.Confidence;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.Utterance = (org.stromberg.durandal.api.Sentence)value;
                break;
            case (short)2:
                this.Slots = (java.util.ArrayList<org.stromberg.durandal.api.SlotValue>)value;
                break;
            case (short)3:
                this.Annotations = (java.util.HashMap<String, String>)value;
                break;
            case (short)4:
                this.Confidence = (Float)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        if (org.stromberg.durandal.api.Sentence.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.Sentence();
        }

        if (org.stromberg.durandal.api.SlotValue.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.SlotValue();
        }

        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public TaggedData() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("TaggedData", "org.stromberg.durandal.api.TaggedData");
    }

    protected void reset(String name, String qualifiedName) {
        
        Utterance = new org.stromberg.durandal.api.Sentence();
        if (Slots == null) {
            Slots = new java.util.ArrayList<org.stromberg.durandal.api.SlotValue>();
        } else {
            Slots.clear();
        }
        if (Annotations == null) {
            Annotations = new java.util.HashMap<String, String>();
        } else {
            Annotations.clear();
        }
        Confidence = 0f;
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Utterance.read(reader);
        }
        else
        {
            // throw new BondException("Missing required field \"Utterance\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Slots(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }
        else
        {
            // throw new BondException("Missing required field \"Slots\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Annotations(reader, com.microsoft.bond.BondDataType.BT_MAP);
        }
        else
        {
            // throw new BondException("Missing required field \"Annotations\", id=3");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Confidence = reader.readFloat();
        }
        else
        {
            // throw new BondException("Missing required field \"Confidence\", id=4");
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(5);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    com.microsoft.bond.internal.ReadHelper.validateType(fieldTag.type, com.microsoft.bond.BondDataType.BT_STRUCT);
                    this.Utterance.readImpl(reader);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    this.readFieldImpl_Slots(reader, fieldTag.type);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    this.readFieldImpl_Annotations(reader, fieldTag.type);
                    // seenRequiredFields.Set(3, true);
                    break;
                case 4:
                    this.Confidence = com.microsoft.bond.internal.ReadHelper.readFloat(reader, fieldTag.type);
                    // seenRequiredFields.Set(4, true);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    private void readFieldImpl_Slots(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
        this.Slots.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            org.stromberg.durandal.api.SlotValue element2 = new org.stromberg.durandal.api.SlotValue();
                element2.readImpl(reader);
            this.Slots.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_Slots


    private void readFieldImpl_Annotations(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_MAP);
    
        com.microsoft.bond.ProtocolReader.MapTag tag1 = reader.readMapContainerBegin();
    
        for (int i2 = 0; i2 < tag1.size; i2++) {
            String key3 = "";
            String val4 = "";
    
            // Read key
                key3 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.keyType);
    
            // Read value
                val4 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.valueType);
            //
            this.Annotations.put(key3, val4);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_Annotations


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRUCT, 1, Schema.Utterance_metadata);
        Utterance.writeImpl(writer, false);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 2, Schema.Slots_metadata);
        int size2 = Slots.size();
            writer.writeContainerBegin(size2, com.microsoft.bond.BondDataType.BT_STRUCT);
            for (org.stromberg.durandal.api.SlotValue item1 : Slots) {
                item1.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_MAP, 3, Schema.Annotations_metadata);
        writer.writeContainerBegin(Annotations.size(), com.microsoft.bond.BondDataType.BT_STRING, com.microsoft.bond.BondDataType.BT_STRING);
            for (java.util.Map.Entry<String, String> e3 : Annotations.entrySet()) {
                // Key
                writer.writeString(e3.getKey());
                // Value
                writer.writeString(e3.getValue());
            }
            writer.writeContainerEnd();
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_FLOAT, 4, Schema.Confidence_metadata);
        writer.writeFloat(Confidence);
        writer.writeFieldEnd();

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        TaggedData that = (TaggedData)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(TaggedData that) {
        boolean equals = true;
        
        equals = equals && ((this.Slots == null) == (that.Slots == null));
        equals = equals && ((this.Slots == null) ? true : (this.Slots.size() == that.Slots.size()));
        equals = equals && ((this.Annotations == null) == (that.Annotations == null));
        equals = equals && ((this.Annotations == null) ? true : (this.Annotations.size() == that.Annotations.size()));
        equals = equals && (Float.isNaN(this.Confidence) ? Float.isNaN(that.Confidence) : (this.Confidence == that.Confidence));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(TaggedData that) {
        boolean equals = true;
        
        equals = equals && (this.Utterance == null ? true : this.Utterance.memberwiseCompare(that.Utterance));
        if (equals && this.Slots != null && this.Slots.size() != 0) {
            for (int i1 = 0; i1 < this.Slots.size(); ++i1) {
                org.stromberg.durandal.api.SlotValue val2 = this.Slots.get(i1);
                org.stromberg.durandal.api.SlotValue val3 = that.Slots.get(i1);
                equals = equals && ((val2 == null) == (val3 == null));
                equals = equals && (val2 == null ? true : val2.memberwiseCompare(val3));
                if (!equals) {
                    break;
                }
            }
        }
        if (equals && this.Annotations != null && this.Annotations.size() != 0)
        {
            for (java.util.Map.Entry<String, String> e6 : this.Annotations.entrySet()) {
                String val4 = e6.getValue();
                String val5 = that.Annotations.get(e6.getKey());
                equals = equals && that.Annotations.containsKey(e6.getKey());
                if (equals) {
                    equals = equals && ((val4 == null) == (val5 == null));
                    equals = equals && (val4 == null ? true : (val4.length() == val5.length()));
                    equals = equals && (val4 == null ? true : val4.equals(val5));
                }
                if (!equals) {
                    break;
                }
            }
        }
        return equals;
    } // memberwiseCompareDeep

}; // class TaggedData
