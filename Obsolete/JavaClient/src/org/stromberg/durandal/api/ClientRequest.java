



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\ClientRequest.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* ClientRequest
*/
@SuppressWarnings("all")
public class ClientRequest implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required int32 ProtocolVersion
    private int ProtocolVersion;

    // 2: Required org.stromberg.durandal.api.ClientContext ClientContext
    private org.stromberg.durandal.api.ClientContext ClientContext;

    // 3: Required org.stromberg.durandal.api.InputMethod Source
    private org.stromberg.durandal.api.InputMethod Source;

    // 4: Optional vector<org.stromberg.durandal.api.SpeechHypothesis> Queries
    private java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> Queries;

    // 5: Optional nullable<org.stromberg.durandal.api.SecurityToken> AuthToken
    private org.stromberg.durandal.api.SecurityToken AuthToken;

    // 6: Optional nullable<org.stromberg.durandal.api.AudioData> QueryAudio
    private org.stromberg.durandal.api.AudioData QueryAudio;

    // 7: Optional nullable<vector<org.stromberg.durandal.api.RecoResult>> UnderstandingData
    private java.util.ArrayList<org.stromberg.durandal.api.RecoResult> UnderstandingData;

    // 8: Optional string PreferredAudioCodec
    private String PreferredAudioCodec;

    // 9: Optional string TraceId
    private String TraceId;

    // 10: Optional vector<string> DomainScope
    private java.util.ArrayList<String> DomainScope;

    /**
     * @return current value of ProtocolVersion property
     */
    public final int getProtocolVersion() {
        return this.ProtocolVersion;
    }

    /**
     * @param value new value of ProtocolVersion property
     */
    public final void setProtocolVersion(int value) {
        this.ProtocolVersion = value;
    }

    /**
     * @return current value of ClientContext property
     */
    public final org.stromberg.durandal.api.ClientContext getClientContext() {
        return this.ClientContext;
    }

    /**
     * @param value new value of ClientContext property
     */
    public final void setClientContext(org.stromberg.durandal.api.ClientContext value) {
        this.ClientContext = value;
    }

    /**
     * @return current value of Source property
     */
    public final org.stromberg.durandal.api.InputMethod getSource() {
        return this.Source;
    }

    /**
     * @param value new value of Source property
     */
    public final void setSource(org.stromberg.durandal.api.InputMethod value) {
        this.Source = value;
    }

    /**
     * @return current value of Queries property
     */
    public final java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> getQueries() {
        return this.Queries;
    }

    /**
     * @param value new value of Queries property
     */
    public final void setQueries(java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> value) {
        this.Queries = value;
    }

    /**
     * @return current value of AuthToken property
     */
    public final org.stromberg.durandal.api.SecurityToken getAuthToken() {
        return this.AuthToken;
    }

    /**
     * @param value new value of AuthToken property
     */
    public final void setAuthToken(org.stromberg.durandal.api.SecurityToken value) {
        this.AuthToken = value;
    }

    /**
     * @return current value of QueryAudio property
     */
    public final org.stromberg.durandal.api.AudioData getQueryAudio() {
        return this.QueryAudio;
    }

    /**
     * @param value new value of QueryAudio property
     */
    public final void setQueryAudio(org.stromberg.durandal.api.AudioData value) {
        this.QueryAudio = value;
    }

    /**
     * @return current value of UnderstandingData property
     */
    public final java.util.ArrayList<org.stromberg.durandal.api.RecoResult> getUnderstandingData() {
        return this.UnderstandingData;
    }

    /**
     * @param value new value of UnderstandingData property
     */
    public final void setUnderstandingData(java.util.ArrayList<org.stromberg.durandal.api.RecoResult> value) {
        this.UnderstandingData = value;
    }

    /**
     * @return current value of PreferredAudioCodec property
     */
    public final String getPreferredAudioCodec() {
        return this.PreferredAudioCodec;
    }

    /**
     * @param value new value of PreferredAudioCodec property
     */
    public final void setPreferredAudioCodec(String value) {
        this.PreferredAudioCodec = value;
    }

    /**
     * @return current value of TraceId property
     */
    public final String getTraceId() {
        return this.TraceId;
    }

    /**
     * @param value new value of TraceId property
     */
    public final void setTraceId(String value) {
        this.TraceId = value;
    }

    /**
     * @return current value of DomainScope property
     */
    public final java.util.ArrayList<String> getDomainScope() {
        return this.DomainScope;
    }

    /**
     * @param value new value of DomainScope property
     */
    public final void setDomainScope(java.util.ArrayList<String> value) {
        this.DomainScope = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata ProtocolVersion_metadata;
        private static final com.microsoft.bond.Metadata ClientContext_metadata;
        private static final com.microsoft.bond.Metadata Source_metadata;
        private static final com.microsoft.bond.Metadata Queries_metadata;
        private static final com.microsoft.bond.Metadata AuthToken_metadata;
        private static final com.microsoft.bond.Metadata QueryAudio_metadata;
        private static final com.microsoft.bond.Metadata UnderstandingData_metadata;
        private static final com.microsoft.bond.Metadata PreferredAudioCodec_metadata;
        private static final com.microsoft.bond.Metadata TraceId_metadata;
        private static final com.microsoft.bond.Metadata DomainScope_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("ClientRequest");
            metadata.setQualified_name("org.stromberg.durandal.api.ClientRequest");


            // ProtocolVersion
            ProtocolVersion_metadata = new com.microsoft.bond.Metadata();
            ProtocolVersion_metadata.setName("ProtocolVersion");
            ProtocolVersion_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            ProtocolVersion_metadata.getDefault_value().setInt_value(6);

            // ClientContext
            ClientContext_metadata = new com.microsoft.bond.Metadata();
            ClientContext_metadata.setName("ClientContext");
            ClientContext_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // Source
            Source_metadata = new com.microsoft.bond.Metadata();
            Source_metadata.setName("Source");
            Source_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Source_metadata.getDefault_value().setInt_value(org.stromberg.durandal.api.InputMethod.Unknown.getValue());

            // Queries
            Queries_metadata = new com.microsoft.bond.Metadata();
            Queries_metadata.setName("Queries");

            // AuthToken
            AuthToken_metadata = new com.microsoft.bond.Metadata();
            AuthToken_metadata.setName("AuthToken");

            // QueryAudio
            QueryAudio_metadata = new com.microsoft.bond.Metadata();
            QueryAudio_metadata.setName("QueryAudio");

            // UnderstandingData
            UnderstandingData_metadata = new com.microsoft.bond.Metadata();
            UnderstandingData_metadata.setName("UnderstandingData");

            // PreferredAudioCodec
            PreferredAudioCodec_metadata = new com.microsoft.bond.Metadata();
            PreferredAudioCodec_metadata.setName("PreferredAudioCodec");

            // TraceId
            TraceId_metadata = new com.microsoft.bond.Metadata();
            TraceId_metadata.setName("TraceId");

            // DomainScope
            DomainScope_metadata = new com.microsoft.bond.Metadata();
            DomainScope_metadata.setName("DomainScope");

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(ProtocolVersion_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(ClientContext_metadata);
            field.setType(org.stromberg.durandal.api.ClientContext.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(Source_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(Queries_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.SpeechHypothesis.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)5);
            field.setMetadata(AuthToken_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.SecurityToken.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)6);
            field.setMetadata(QueryAudio_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.AudioData.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)7);
            field.setMetadata(UnderstandingData_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().getElement().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setElement(org.stromberg.durandal.api.RecoResult.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)8);
            field.setMetadata(PreferredAudioCodec_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)9);
            field.setMetadata(TraceId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)10);
            field.setMetadata(DomainScope_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.ProtocolVersion;
            case (short)2:
                return this.ClientContext;
            case (short)3:
                return this.Source;
            case (short)4:
                return this.Queries;
            case (short)5:
                return this.AuthToken;
            case (short)6:
                return this.QueryAudio;
            case (short)7:
                return this.UnderstandingData;
            case (short)8:
                return this.PreferredAudioCodec;
            case (short)9:
                return this.TraceId;
            case (short)10:
                return this.DomainScope;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.ProtocolVersion = (Integer)value;
                break;
            case (short)2:
                this.ClientContext = (org.stromberg.durandal.api.ClientContext)value;
                break;
            case (short)3:
                this.Source = (org.stromberg.durandal.api.InputMethod)value;
                break;
            case (short)4:
                this.Queries = (java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis>)value;
                break;
            case (short)5:
                this.AuthToken = (org.stromberg.durandal.api.SecurityToken)value;
                break;
            case (short)6:
                this.QueryAudio = (org.stromberg.durandal.api.AudioData)value;
                break;
            case (short)7:
                this.UnderstandingData = (java.util.ArrayList<org.stromberg.durandal.api.RecoResult>)value;
                break;
            case (short)8:
                this.PreferredAudioCodec = (String)value;
                break;
            case (short)9:
                this.TraceId = (String)value;
                break;
            case (short)10:
                this.DomainScope = (java.util.ArrayList<String>)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        if (org.stromberg.durandal.api.ClientContext.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.ClientContext();
        }

        if (org.stromberg.durandal.api.SpeechHypothesis.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.SpeechHypothesis();
        }

        if (org.stromberg.durandal.api.SecurityToken.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.SecurityToken();
        }

        if (org.stromberg.durandal.api.AudioData.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.AudioData();
        }

        if (org.stromberg.durandal.api.RecoResult.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.RecoResult();
        }

        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public ClientRequest() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("ClientRequest", "org.stromberg.durandal.api.ClientRequest");
    }

    protected void reset(String name, String qualifiedName) {
        
        ProtocolVersion = 6;
        ClientContext = new org.stromberg.durandal.api.ClientContext();
        Source = org.stromberg.durandal.api.InputMethod.Unknown;
        if (Queries == null) {
            Queries = new java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis>();
        } else {
            Queries.clear();
        }
        AuthToken = null;
        QueryAudio = null;
        UnderstandingData = null;
        PreferredAudioCodec = "";
        TraceId = "";
        if (DomainScope == null) {
            DomainScope = new java.util.ArrayList<String>();
        } else {
            DomainScope.clear();
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ProtocolVersion = reader.readInt32();
        }
        else
        {
            // throw new BondException("Missing required field \"ProtocolVersion\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ClientContext.read(reader);
        }
        else
        {
            // throw new BondException("Missing required field \"ClientContext\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Source = org.stromberg.durandal.api.InputMethod.fromValue(reader.readInt32());
        }
        else
        {
            // throw new BondException("Missing required field \"Source\", id=3");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Queries(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_AuthToken(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_QueryAudio(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_UnderstandingData(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.PreferredAudioCodec = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.TraceId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_DomainScope(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(4);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    this.ProtocolVersion = com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    com.microsoft.bond.internal.ReadHelper.validateType(fieldTag.type, com.microsoft.bond.BondDataType.BT_STRUCT);
                    this.ClientContext.readImpl(reader);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    this.Source = org.stromberg.durandal.api.InputMethod.fromValue(com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type));
                    // seenRequiredFields.Set(3, true);
                    break;
                case 4:
                    this.readFieldImpl_Queries(reader, fieldTag.type);
                    break;
                case 5:
                    this.readFieldImpl_AuthToken(reader, fieldTag.type);
                    break;
                case 6:
                    this.readFieldImpl_QueryAudio(reader, fieldTag.type);
                    break;
                case 7:
                    this.readFieldImpl_UnderstandingData(reader, fieldTag.type);
                    break;
                case 8:
                    this.PreferredAudioCodec = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 9:
                    this.TraceId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 10:
                    this.readFieldImpl_DomainScope(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    private void readFieldImpl_Queries(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
        this.Queries.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            org.stromberg.durandal.api.SpeechHypothesis element2 = new org.stromberg.durandal.api.SpeechHypothesis();
                element2.readImpl(reader);
            this.Queries.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_Queries


    private void readFieldImpl_AuthToken(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
    
        if (tag1.size == 1) {
            if (this.AuthToken == null) { this.AuthToken = new org.stromberg.durandal.api.SecurityToken(); }    this.AuthToken.readImpl(reader);
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_AuthToken


    private void readFieldImpl_QueryAudio(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
    
        if (tag1.size == 1) {
            if (this.QueryAudio == null) { this.QueryAudio = new org.stromberg.durandal.api.AudioData(); }    this.QueryAudio.readImpl(reader);
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_QueryAudio


    private void readFieldImpl_UnderstandingData(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_LIST);
    
        if (tag1.size == 1) {
            if (this.UnderstandingData == null) { this.UnderstandingData = new java.util.ArrayList<org.stromberg.durandal.api.RecoResult>(); }    com.microsoft.bond.ProtocolReader.ListTag tag2 = reader.readContainerBegin();
            com.microsoft.bond.internal.ReadHelper.validateType(tag2.type, com.microsoft.bond.BondDataType.BT_STRUCT);
            this.UnderstandingData.ensureCapacity(tag2.size);
        
            for (int i4 = 0; i4 < tag2.size; i4++) {
                org.stromberg.durandal.api.RecoResult element3 = new org.stromberg.durandal.api.RecoResult();
                    element3.readImpl(reader);
                this.UnderstandingData.add(element3);
            }
        
            reader.readContainerEnd();
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_UnderstandingData


    private void readFieldImpl_DomainScope(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        this.DomainScope.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            String element2 = "";
                element2 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.type);
            this.DomainScope.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_DomainScope


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 1, Schema.ProtocolVersion_metadata);
        writer.writeInt32(ProtocolVersion);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRUCT, 2, Schema.ClientContext_metadata);
        ClientContext.writeImpl(writer, false);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 3, Schema.Source_metadata);
        writer.writeInt32(Source.getValue());
        writer.writeFieldEnd();

        int size1 = (Queries.size());
        if (!canOmitFields || (size1 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 4, Schema.Queries_metadata);
            writer.writeContainerBegin(size1, com.microsoft.bond.BondDataType.BT_STRUCT);
            for (org.stromberg.durandal.api.SpeechHypothesis item2 : Queries) {
                item2.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 4, Schema.Queries_metadata);
        }

        int size3 = (AuthToken != null) ? 1 : 0;
        if (!canOmitFields || (size3 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 5, Schema.AuthToken_metadata);
            writer.writeContainerBegin(size3, com.microsoft.bond.BondDataType.BT_STRUCT);
            if (size3 != 0) {
                AuthToken.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 5, Schema.AuthToken_metadata);
        }

        int size4 = (QueryAudio != null) ? 1 : 0;
        if (!canOmitFields || (size4 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 6, Schema.QueryAudio_metadata);
            writer.writeContainerBegin(size4, com.microsoft.bond.BondDataType.BT_STRUCT);
            if (size4 != 0) {
                QueryAudio.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 6, Schema.QueryAudio_metadata);
        }

        int size5 = (UnderstandingData != null) ? 1 : 0;
        if (!canOmitFields || (size5 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 7, Schema.UnderstandingData_metadata);
            writer.writeContainerBegin(size5, com.microsoft.bond.BondDataType.BT_LIST);
            if (size5 != 0) {
                int size7 = UnderstandingData.size();
                writer.writeContainerBegin(size7, com.microsoft.bond.BondDataType.BT_STRUCT);
                for (org.stromberg.durandal.api.RecoResult item6 : UnderstandingData) {
                    item6.writeImpl(writer, false);
                }
                writer.writeContainerEnd();
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 7, Schema.UnderstandingData_metadata);
        }

        if (!canOmitFields || (PreferredAudioCodec != Schema.PreferredAudioCodec_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 8, Schema.PreferredAudioCodec_metadata);
            writer.writeString(PreferredAudioCodec);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 8, Schema.PreferredAudioCodec_metadata);
        }

        if (!canOmitFields || (TraceId != Schema.TraceId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 9, Schema.TraceId_metadata);
            writer.writeString(TraceId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 9, Schema.TraceId_metadata);
        }

        int size10 = (DomainScope.size());
        if (!canOmitFields || (size10 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 10, Schema.DomainScope_metadata);
            writer.writeContainerBegin(size10, com.microsoft.bond.BondDataType.BT_STRING);
            for (String item11 : DomainScope) {
                writer.writeString(item11);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 10, Schema.DomainScope_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        ClientRequest that = (ClientRequest)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(ClientRequest that) {
        boolean equals = true;
        
        equals = equals && (this.ProtocolVersion == that.ProtocolVersion);
        equals = equals && (this.Source == that.Source);
        equals = equals && ((this.Queries == null) == (that.Queries == null));
        equals = equals && ((this.Queries == null) ? true : (this.Queries.size() == that.Queries.size()));
        equals = equals && ((this.AuthToken == null) == (that.AuthToken == null));
        equals = equals && ((this.QueryAudio == null) == (that.QueryAudio == null));
        equals = equals && ((this.UnderstandingData == null) == (that.UnderstandingData == null));
        equals = equals && ((this.PreferredAudioCodec == null) == (that.PreferredAudioCodec == null));
        equals = equals && (this.PreferredAudioCodec == null ? true : (this.PreferredAudioCodec.length() == that.PreferredAudioCodec.length()));
        equals = equals && ((this.TraceId == null) == (that.TraceId == null));
        equals = equals && (this.TraceId == null ? true : (this.TraceId.length() == that.TraceId.length()));
        equals = equals && ((this.DomainScope == null) == (that.DomainScope == null));
        equals = equals && ((this.DomainScope == null) ? true : (this.DomainScope.size() == that.DomainScope.size()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(ClientRequest that) {
        boolean equals = true;
        
        equals = equals && (this.ClientContext == null ? true : this.ClientContext.memberwiseCompare(that.ClientContext));
        if (equals && this.Queries != null && this.Queries.size() != 0) {
            for (int i1 = 0; i1 < this.Queries.size(); ++i1) {
                org.stromberg.durandal.api.SpeechHypothesis val2 = this.Queries.get(i1);
                org.stromberg.durandal.api.SpeechHypothesis val3 = that.Queries.get(i1);
                equals = equals && ((val2 == null) == (val3 == null));
                equals = equals && (val2 == null ? true : val2.memberwiseCompare(val3));
                if (!equals) {
                    break;
                }
            }
        }
        if (equals && !(this.AuthToken == null)) {
            equals = equals && ((this.AuthToken == null) == (that.AuthToken == null));
            equals = equals && (this.AuthToken == null ? true : this.AuthToken.memberwiseCompare(that.AuthToken));
        }
        if (equals && !(this.QueryAudio == null)) {
            equals = equals && ((this.QueryAudio == null) == (that.QueryAudio == null));
            equals = equals && (this.QueryAudio == null ? true : this.QueryAudio.memberwiseCompare(that.QueryAudio));
        }
        if (equals && !(this.UnderstandingData == null)) {
            equals = equals && ((this.UnderstandingData == null) == (that.UnderstandingData == null));
            equals = equals && ((this.UnderstandingData == null) ? true : (this.UnderstandingData.size() == that.UnderstandingData.size()));
            if (equals && this.UnderstandingData != null && this.UnderstandingData.size() != 0) {
                for (int i4 = 0; i4 < this.UnderstandingData.size(); ++i4) {
                    org.stromberg.durandal.api.RecoResult val5 = this.UnderstandingData.get(i4);
                    org.stromberg.durandal.api.RecoResult val6 = that.UnderstandingData.get(i4);
                    equals = equals && ((val5 == null) == (val6 == null));
                    equals = equals && (val5 == null ? true : val5.memberwiseCompare(val6));
                    if (!equals) {
                        break;
                    }
                }
            }
        }
        equals = equals && (this.PreferredAudioCodec == null ? true : this.PreferredAudioCodec.equals(that.PreferredAudioCodec));
        equals = equals && (this.TraceId == null ? true : this.TraceId.equals(that.TraceId));
        if (equals && this.DomainScope != null && this.DomainScope.size() != 0) {
            for (int i7 = 0; i7 < this.DomainScope.size(); ++i7) {
                String val8 = this.DomainScope.get(i7);
                String val9 = that.DomainScope.get(i7);
                equals = equals && ((val8 == null) == (val9 == null));
                equals = equals && (val8 == null ? true : (val8.length() == val9.length()));
                equals = equals && (val8 == null ? true : val8.equals(val9));
                if (!equals) {
                    break;
                }
            }
        }
        return equals;
    } // memberwiseCompareDeep

}; // class ClientRequest
