


########## Dialog Service ##########

[Description|The list of endpoints to bind the dialog server to]
[Type|StringList]
dialogServerEndpoints=http://*:62292/,http://localhost:62292/,http://*:62297/,http://localhost:62297/

[Default|socket]
[Description|The backing class to use for the HTTP server, either "listener" or "socket". SSL requires "listener"]
[Type|String]
httpServerImpl=socket

[Description|Whether to enable an interactive console (for debugging and quick testing)]
[Type|Bool]
enableInteractiveConsole=true



########## LU Client ##########

[Default|localhost]
[GUI]
[Type|String]
luServerHost=localhost

[Default|62291]
[GUI]
[Type|Int]
luServerPort=62291

[Default|2000]
[GUI]
[Type|Int]
luTimeout=2000

########## Audio and Speech ##########

[Default|bing]
[Type|String]
ttsProvider=sapi

[Default|azure]
[Type|String]
srProvider=azure

[Default|sqrt]
[GUI]
[Type|StringList]
supportedAudioCodecs=sqrt,opus

[Default|1]
[Type|Int]
speechPoolSize=4




########## Core Dialog ##########

[Default|true]
[GUI]
[Type|Bool]
ignoreSideSpeech=false

[GUI]
[Type|Float]
minAnswerConfidence=0.4

[Description|Cap for side speech hypothesis confidence. This is to prevent cases where both side speech AND a valid answer are tagged with a high confidence]
[GUI]
[Type|Float]
maxSideSpeechConfidence=0.75

[Default|true]
[GUI]
[Type|Bool]
sandboxPlugins=false

[Default|false]
[GUI]
[Type|Bool]
failFastPlugins=false

[Default|30000]
[GUI]
[Type|Int]
maxPluginExecutionTime=30000

[Default|10]
[Type|Int]
maxConversationHistoryLength=10

[Default|common]
[GUI]
[Type|StringList]
pluginIdsToLoad=common

[Type|StringList]
allowedGlobalProfileEditors=reflection

[Default|65536]
[Type|Int]
maxStoreSizeBytes=65536

[Description|The callback URL to be passed to all OAuth services]
[Type|String]
oauthCallbackUrl=https://localhost/oauth




########## Logging and Instrumentation ##########

[Description|The set of loggers to enable for the service. Allowed values are "console", "file", "http"]
[Default|console]
[Type|StringList]
loggers=file,console

[Description|The endpoint for the http logger]
[Type|String]
remoteLoggingEndpoint=localhost
[Description|The port for the http logger]
[Type|Int]
remoteLoggingPort=62295
[Description|The stream name for the http logger]
[Type|String]
remoteLoggingStream=Prod

[Type|String]
appInsightsConnectionString=

[Default|26]
[Type|Int]
privacyClassesToEncrypt=26

[Type|String]
piiEncryptionKey=

[Type|Bool]
assumePluginResponsesArePII=true




########## Remoting ##########

[Description|Determines the plugin loading method, which affects how plugin DLLs are discovered, hot-swapped, installed, etc. Valid options are "basic" (no containers), "locally_remoted" (basic but with remoting), "appdomain_isolated" (.Net Framework only), "loadcontext_isolated" (.Net Core only), "containerized" (selects either app domain or load context) and "process_isolated"]
[Default|basic]
[Type|String]
pluginLoader=containerized

[Description|Implementation to use for interprocess communication with containers. Valid options are "mmio", "pipe", or "tcp"]
[Default|mmio]
[Type|String]
remotingPipeImplementation=mmio

[Description|The interval between each keepalive ping to each remoting container, or 0 to disable health monitoring]
[Default|1.000]
[Type|TimeSpan]
keepAlivePingInterval=1.000

[Description|The interval between each keepalive ping to each remoting container.]
[Default|1.000]
[Type|TimeSpan]
keepAlivePingTimeout=1.000

[Description|The rate that container health must fall below (as measured by keepalive ping failures) before attempting to recycle a container.]
[Default|0.2]
[Type|Float]
keepAliveFailureThreshold=0.2

[Description|Protocol to use for interprocess communication with containers. Valid options are "bond" or "json"]
[Default|bond]
[Type|String]
ipcProtocol=bond

[Description|Indicates whether IPC to containers should use a dedicated thread]
[Default|true]
[Type|Bool]
useDedicatedIpcThreads=true


########## External services ##########

# Service dependencies
# This configuration value uses the variant "service" per-service, allowing you to mix and match providers.
#
# For example, this will use "mysql" for everything except streaming audio:
# servicesProvider&service:streaming_audio_cache=memory
# servicesProvider=mysql
#
# The services are:
# VARIANT NAME				ALLOWED VALUES			DESCRIPTION
# conversation_cache		memory,mysql			Storage for conversation states
# dialog_action_cache		memory,mysql,redis		Cache of dialog actions used for various types of interactions
# web_data_cache			memory,mysql,redis		Cache of dynamic web data (html, images, etc.)
# client_context_cache		memory,mysql,redis		Cache of client-specific contexts - only used for web browser clients
# public_key_store			memory,mysql			Storage for authenticated users' public keys
# oauth_secret_store		memory,mysql			Storage for OAuth tokens and secrets
# user_profile_store		memory,mysql			Storage for persistent user profiles
# streaming_audio_cache		memory,mysql,redis		Cache for streaming audio data
[Description|Defines what service will provide things like caches, session store, and user profile storage.]
[Default|memory]
[Type|String]
servicesProvider=memory

[Description|The connection string to use for Redis service connections]
[Type|String]
redisConnectionString=localhost
[Description|The connection string to use for MySQL service connections]
[Type|String]
mySqlConnectionString=server=SERVER;port=PORT;database=DB;user id=USER;password=PASS;allowbatch=True;pooling=True;compress=False;characterset=utf8
[Type|String]
ttsApiKey=
[Type|String]
srApiKey=
