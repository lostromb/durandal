



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\ClientContext.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* ClientContext
*/
@SuppressWarnings("all")
public class ClientContext implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required string ClientId
    private String ClientId;

    // 2: Required uint32 Capabilities
    private int Capabilities;

    // 3: Required string Locale
    private String Locale;

    // 4: Required string UserId
    private String UserId;

    // 5: Optional string ClientName
    private String ClientName;

    // 6: Optional string ReferenceDateTime
    private String ReferenceDateTime;

    // 7: Optional int32 UTCOffset
    private int UTCOffset;

    // 8: Optional nullable<double> Latitude
    private Double Latitude;

    // 9: Optional nullable<double> Longitude
    private Double Longitude;

    // 10: Optional nullable<double> LocationAccuracy
    private Double LocationAccuracy;

    // 11: Optional map<string, string> Data
    private java.util.HashMap<String, String> Data;

    /**
     * @return current value of ClientId property
     */
    public final String getClientId() {
        return this.ClientId;
    }

    /**
     * @param value new value of ClientId property
     */
    public final void setClientId(String value) {
        this.ClientId = value;
    }

    /**
     * @return current value of Capabilities property
     */
    public final int getCapabilities() {
        return this.Capabilities;
    }

    /**
     * @param value new value of Capabilities property
     */
    public final void setCapabilities(int value) {
        this.Capabilities = value;
    }

    /**
     * @return current value of Locale property
     */
    public final String getLocale() {
        return this.Locale;
    }

    /**
     * @param value new value of Locale property
     */
    public final void setLocale(String value) {
        this.Locale = value;
    }

    /**
     * @return current value of UserId property
     */
    public final String getUserId() {
        return this.UserId;
    }

    /**
     * @param value new value of UserId property
     */
    public final void setUserId(String value) {
        this.UserId = value;
    }

    /**
     * @return current value of ClientName property
     */
    public final String getClientName() {
        return this.ClientName;
    }

    /**
     * @param value new value of ClientName property
     */
    public final void setClientName(String value) {
        this.ClientName = value;
    }

    /**
     * @return current value of ReferenceDateTime property
     */
    public final String getReferenceDateTime() {
        return this.ReferenceDateTime;
    }

    /**
     * @param value new value of ReferenceDateTime property
     */
    public final void setReferenceDateTime(String value) {
        this.ReferenceDateTime = value;
    }

    /**
     * @return current value of UTCOffset property
     */
    public final int getUTCOffset() {
        return this.UTCOffset;
    }

    /**
     * @param value new value of UTCOffset property
     */
    public final void setUTCOffset(int value) {
        this.UTCOffset = value;
    }

    /**
     * @return current value of Latitude property
     */
    public final Double getLatitude() {
        return this.Latitude;
    }

    /**
     * @param value new value of Latitude property
     */
    public final void setLatitude(Double value) {
        this.Latitude = value;
    }

    /**
     * @return current value of Longitude property
     */
    public final Double getLongitude() {
        return this.Longitude;
    }

    /**
     * @param value new value of Longitude property
     */
    public final void setLongitude(Double value) {
        this.Longitude = value;
    }

    /**
     * @return current value of LocationAccuracy property
     */
    public final Double getLocationAccuracy() {
        return this.LocationAccuracy;
    }

    /**
     * @param value new value of LocationAccuracy property
     */
    public final void setLocationAccuracy(Double value) {
        this.LocationAccuracy = value;
    }

    /**
     * @return current value of Data property
     */
    public final java.util.HashMap<String, String> getData() {
        return this.Data;
    }

    /**
     * @param value new value of Data property
     */
    public final void setData(java.util.HashMap<String, String> value) {
        this.Data = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata ClientId_metadata;
        private static final com.microsoft.bond.Metadata Capabilities_metadata;
        private static final com.microsoft.bond.Metadata Locale_metadata;
        private static final com.microsoft.bond.Metadata UserId_metadata;
        private static final com.microsoft.bond.Metadata ClientName_metadata;
        private static final com.microsoft.bond.Metadata ReferenceDateTime_metadata;
        private static final com.microsoft.bond.Metadata UTCOffset_metadata;
        private static final com.microsoft.bond.Metadata Latitude_metadata;
        private static final com.microsoft.bond.Metadata Longitude_metadata;
        private static final com.microsoft.bond.Metadata LocationAccuracy_metadata;
        private static final com.microsoft.bond.Metadata Data_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("ClientContext");
            metadata.setQualified_name("org.stromberg.durandal.api.ClientContext");


            // ClientId
            ClientId_metadata = new com.microsoft.bond.Metadata();
            ClientId_metadata.setName("ClientId");
            ClientId_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            ClientId_metadata.getDefault_value().setString_value("");

            // Capabilities
            Capabilities_metadata = new com.microsoft.bond.Metadata();
            Capabilities_metadata.setName("Capabilities");
            Capabilities_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Capabilities_metadata.getDefault_value().setUint_value(0);

            // Locale
            Locale_metadata = new com.microsoft.bond.Metadata();
            Locale_metadata.setName("Locale");
            Locale_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Locale_metadata.getDefault_value().setString_value("");

            // UserId
            UserId_metadata = new com.microsoft.bond.Metadata();
            UserId_metadata.setName("UserId");
            UserId_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            UserId_metadata.getDefault_value().setString_value("0");

            // ClientName
            ClientName_metadata = new com.microsoft.bond.Metadata();
            ClientName_metadata.setName("ClientName");

            // ReferenceDateTime
            ReferenceDateTime_metadata = new com.microsoft.bond.Metadata();
            ReferenceDateTime_metadata.setName("ReferenceDateTime");

            // UTCOffset
            UTCOffset_metadata = new com.microsoft.bond.Metadata();
            UTCOffset_metadata.setName("UTCOffset");
            UTCOffset_metadata.getDefault_value().setInt_value(0);

            // Latitude
            Latitude_metadata = new com.microsoft.bond.Metadata();
            Latitude_metadata.setName("Latitude");

            // Longitude
            Longitude_metadata = new com.microsoft.bond.Metadata();
            Longitude_metadata.setName("Longitude");

            // LocationAccuracy
            LocationAccuracy_metadata = new com.microsoft.bond.Metadata();
            LocationAccuracy_metadata.setName("LocationAccuracy");

            // Data
            Data_metadata = new com.microsoft.bond.Metadata();
            Data_metadata.setName("Data");

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(ClientId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(Capabilities_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_UINT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(Locale_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(UserId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)5);
            field.setMetadata(ClientName_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)6);
            field.setMetadata(ReferenceDateTime_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)7);
            field.setMetadata(UTCOffset_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)8);
            field.setMetadata(Latitude_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_DOUBLE);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)9);
            field.setMetadata(Longitude_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_DOUBLE);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)10);
            field.setMetadata(LocationAccuracy_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_DOUBLE);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)11);
            field.setMetadata(Data_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_MAP);
            field.getType().setKey(new com.microsoft.bond.TypeDef());
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getKey().setId(com.microsoft.bond.BondDataType.BT_STRING);
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.ClientId;
            case (short)2:
                return this.Capabilities;
            case (short)3:
                return this.Locale;
            case (short)4:
                return this.UserId;
            case (short)5:
                return this.ClientName;
            case (short)6:
                return this.ReferenceDateTime;
            case (short)7:
                return this.UTCOffset;
            case (short)8:
                return this.Latitude;
            case (short)9:
                return this.Longitude;
            case (short)10:
                return this.LocationAccuracy;
            case (short)11:
                return this.Data;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.ClientId = (String)value;
                break;
            case (short)2:
                this.Capabilities = (Integer)value;
                break;
            case (short)3:
                this.Locale = (String)value;
                break;
            case (short)4:
                this.UserId = (String)value;
                break;
            case (short)5:
                this.ClientName = (String)value;
                break;
            case (short)6:
                this.ReferenceDateTime = (String)value;
                break;
            case (short)7:
                this.UTCOffset = (Integer)value;
                break;
            case (short)8:
                this.Latitude = (Double)value;
                break;
            case (short)9:
                this.Longitude = (Double)value;
                break;
            case (short)10:
                this.LocationAccuracy = (Double)value;
                break;
            case (short)11:
                this.Data = (java.util.HashMap<String, String>)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public ClientContext() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("ClientContext", "org.stromberg.durandal.api.ClientContext");
    }

    protected void reset(String name, String qualifiedName) {
        
        ClientId = "";
        Capabilities = 0;
        Locale = "";
        UserId = "0";
        ClientName = "";
        ReferenceDateTime = "";
        UTCOffset = 0;
        Latitude = null;
        Longitude = null;
        LocationAccuracy = null;
        if (Data == null) {
            Data = new java.util.HashMap<String, String>();
        } else {
            Data.clear();
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ClientId = reader.readString();
        }
        else
        {
            // throw new BondException("Missing required field \"ClientId\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Capabilities = reader.readUInt32();
        }
        else
        {
            // throw new BondException("Missing required field \"Capabilities\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Locale = reader.readString();
        }
        else
        {
            // throw new BondException("Missing required field \"Locale\", id=3");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.UserId = reader.readString();
        }
        else
        {
            // throw new BondException("Missing required field \"UserId\", id=4");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ClientName = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ReferenceDateTime = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.UTCOffset = reader.readInt32();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Latitude(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Longitude(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_LocationAccuracy(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Data(reader, com.microsoft.bond.BondDataType.BT_MAP);
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(5);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    this.ClientId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    this.Capabilities = com.microsoft.bond.internal.ReadHelper.readUInt32(reader, fieldTag.type);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    this.Locale = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    // seenRequiredFields.Set(3, true);
                    break;
                case 4:
                    this.UserId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    // seenRequiredFields.Set(4, true);
                    break;
                case 5:
                    this.ClientName = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 6:
                    this.ReferenceDateTime = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 7:
                    this.UTCOffset = com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type);
                    break;
                case 8:
                    this.readFieldImpl_Latitude(reader, fieldTag.type);
                    break;
                case 9:
                    this.readFieldImpl_Longitude(reader, fieldTag.type);
                    break;
                case 10:
                    this.readFieldImpl_LocationAccuracy(reader, fieldTag.type);
                    break;
                case 11:
                    this.readFieldImpl_Data(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    private void readFieldImpl_Latitude(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
    
        if (tag1.size == 1) {
                this.Latitude = com.microsoft.bond.internal.ReadHelper.readDouble(reader, tag1.type);
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_Latitude


    private void readFieldImpl_Longitude(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
    
        if (tag1.size == 1) {
                this.Longitude = com.microsoft.bond.internal.ReadHelper.readDouble(reader, tag1.type);
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_Longitude


    private void readFieldImpl_LocationAccuracy(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
    
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
    
        if (tag1.size == 1) {
                this.LocationAccuracy = com.microsoft.bond.internal.ReadHelper.readDouble(reader, tag1.type);
        } else if (tag1.size != 0) {
            // throw new com.microsoft.bond.ProtocolException("Unexpected size for Nullable. Expecting size<=1, got size=" + tag1.size);
        }
    
    
        reader.readContainerEnd();
    } // readFieldImpl_LocationAccuracy


    private void readFieldImpl_Data(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_MAP);
    
        com.microsoft.bond.ProtocolReader.MapTag tag1 = reader.readMapContainerBegin();
    
        for (int i2 = 0; i2 < tag1.size; i2++) {
            String key3 = "";
            String val4 = "";
    
            // Read key
                key3 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.keyType);
    
            // Read value
                val4 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.valueType);
            //
            this.Data.put(key3, val4);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_Data


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 1, Schema.ClientId_metadata);
        writer.writeString(ClientId);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_UINT32, 2, Schema.Capabilities_metadata);
        writer.writeUInt32(Capabilities);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 3, Schema.Locale_metadata);
        writer.writeString(Locale);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 4, Schema.UserId_metadata);
        writer.writeString(UserId);
        writer.writeFieldEnd();

        if (!canOmitFields || (ClientName != Schema.ClientName_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 5, Schema.ClientName_metadata);
            writer.writeString(ClientName);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 5, Schema.ClientName_metadata);
        }

        if (!canOmitFields || (ReferenceDateTime != Schema.ReferenceDateTime_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 6, Schema.ReferenceDateTime_metadata);
            writer.writeString(ReferenceDateTime);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 6, Schema.ReferenceDateTime_metadata);
        }

        if (!canOmitFields || (UTCOffset != Schema.UTCOffset_metadata.getDefault_value().getInt_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 7, Schema.UTCOffset_metadata);
            writer.writeInt32(UTCOffset);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_INT32, 7, Schema.UTCOffset_metadata);
        }

        int size4 = (Latitude != null) ? 1 : 0;
        if (!canOmitFields || (size4 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 8, Schema.Latitude_metadata);
            writer.writeContainerBegin(size4, com.microsoft.bond.BondDataType.BT_DOUBLE);
            if (size4 != 0) {
                writer.writeDouble(Latitude);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 8, Schema.Latitude_metadata);
        }

        int size5 = (Longitude != null) ? 1 : 0;
        if (!canOmitFields || (size5 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 9, Schema.Longitude_metadata);
            writer.writeContainerBegin(size5, com.microsoft.bond.BondDataType.BT_DOUBLE);
            if (size5 != 0) {
                writer.writeDouble(Longitude);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 9, Schema.Longitude_metadata);
        }

        int size6 = (LocationAccuracy != null) ? 1 : 0;
        if (!canOmitFields || (size6 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 10, Schema.LocationAccuracy_metadata);
            writer.writeContainerBegin(size6, com.microsoft.bond.BondDataType.BT_DOUBLE);
            if (size6 != 0) {
                writer.writeDouble(LocationAccuracy);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 10, Schema.LocationAccuracy_metadata);
        }

        int size7 = (Data.size());
        if (!canOmitFields || (size7 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_MAP, 11, Schema.Data_metadata);
            writer.writeContainerBegin(Data.size(), com.microsoft.bond.BondDataType.BT_STRING, com.microsoft.bond.BondDataType.BT_STRING);
            for (java.util.Map.Entry<String, String> e8 : Data.entrySet()) {
                // Key
                writer.writeString(e8.getKey());
                // Value
                writer.writeString(e8.getValue());
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_MAP, 11, Schema.Data_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        ClientContext that = (ClientContext)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(ClientContext that) {
        boolean equals = true;
        
        equals = equals && ((this.ClientId == null) == (that.ClientId == null));
        equals = equals && (this.ClientId == null ? true : (this.ClientId.length() == that.ClientId.length()));
        equals = equals && (this.Capabilities == that.Capabilities);
        equals = equals && ((this.Locale == null) == (that.Locale == null));
        equals = equals && (this.Locale == null ? true : (this.Locale.length() == that.Locale.length()));
        equals = equals && ((this.UserId == null) == (that.UserId == null));
        equals = equals && (this.UserId == null ? true : (this.UserId.length() == that.UserId.length()));
        equals = equals && ((this.ClientName == null) == (that.ClientName == null));
        equals = equals && (this.ClientName == null ? true : (this.ClientName.length() == that.ClientName.length()));
        equals = equals && ((this.ReferenceDateTime == null) == (that.ReferenceDateTime == null));
        equals = equals && (this.ReferenceDateTime == null ? true : (this.ReferenceDateTime.length() == that.ReferenceDateTime.length()));
        equals = equals && (this.UTCOffset == that.UTCOffset);
        equals = equals && ((this.Latitude == null) == (that.Latitude == null));
        equals = equals && ((this.Longitude == null) == (that.Longitude == null));
        equals = equals && ((this.LocationAccuracy == null) == (that.LocationAccuracy == null));
        equals = equals && ((this.Data == null) == (that.Data == null));
        equals = equals && ((this.Data == null) ? true : (this.Data.size() == that.Data.size()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(ClientContext that) {
        boolean equals = true;
        
        equals = equals && (this.ClientId == null ? true : this.ClientId.equals(that.ClientId));
        equals = equals && (this.Locale == null ? true : this.Locale.equals(that.Locale));
        equals = equals && (this.UserId == null ? true : this.UserId.equals(that.UserId));
        equals = equals && (this.ClientName == null ? true : this.ClientName.equals(that.ClientName));
        equals = equals && (this.ReferenceDateTime == null ? true : this.ReferenceDateTime.equals(that.ReferenceDateTime));
        if (equals && !(this.Latitude == null)) {
            equals = equals && (Double.isNaN(this.Latitude) ? Double.isNaN(that.Latitude) : (this.Latitude == that.Latitude || this.Latitude != null && this.Latitude.equals(that.Latitude)));
        }
        if (equals && !(this.Longitude == null)) {
            equals = equals && (Double.isNaN(this.Longitude) ? Double.isNaN(that.Longitude) : (this.Longitude == that.Longitude || this.Longitude != null && this.Longitude.equals(that.Longitude)));
        }
        if (equals && !(this.LocationAccuracy == null)) {
            equals = equals && (Double.isNaN(this.LocationAccuracy) ? Double.isNaN(that.LocationAccuracy) : (this.LocationAccuracy == that.LocationAccuracy || this.LocationAccuracy != null && this.LocationAccuracy.equals(that.LocationAccuracy)));
        }
        if (equals && this.Data != null && this.Data.size() != 0)
        {
            for (java.util.Map.Entry<String, String> e3 : this.Data.entrySet()) {
                String val1 = e3.getValue();
                String val2 = that.Data.get(e3.getKey());
                equals = equals && that.Data.containsKey(e3.getKey());
                if (equals) {
                    equals = equals && ((val1 == null) == (val2 == null));
                    equals = equals && (val1 == null ? true : (val1.length() == val2.length()));
                    equals = equals && (val1 == null ? true : val1.equals(val2));
                }
                if (!equals) {
                    break;
                }
            }
        }
        return equals;
    } // memberwiseCompareDeep

}; // class ClientContext
