



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\MultiTurnBehavior.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* MultiTurnBehavior
*/
@SuppressWarnings("all")
public class MultiTurnBehavior implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required bool Continues
    private boolean Continues;

    // 2: Required bool IsImmediate
    private boolean IsImmediate;

    // 3: Optional int32 SuggestedPauseDelay
    private int SuggestedPauseDelay;

    // 4: Optional int32 ConversationTimeoutSeconds
    private int ConversationTimeoutSeconds;

    /**
     * @return current value of Continues property
     */
    public final boolean getContinues() {
        return this.Continues;
    }

    /**
     * @param value new value of Continues property
     */
    public final void setContinues(boolean value) {
        this.Continues = value;
    }

    /**
     * @return current value of IsImmediate property
     */
    public final boolean getIsImmediate() {
        return this.IsImmediate;
    }

    /**
     * @param value new value of IsImmediate property
     */
    public final void setIsImmediate(boolean value) {
        this.IsImmediate = value;
    }

    /**
     * @return current value of SuggestedPauseDelay property
     */
    public final int getSuggestedPauseDelay() {
        return this.SuggestedPauseDelay;
    }

    /**
     * @param value new value of SuggestedPauseDelay property
     */
    public final void setSuggestedPauseDelay(int value) {
        this.SuggestedPauseDelay = value;
    }

    /**
     * @return current value of ConversationTimeoutSeconds property
     */
    public final int getConversationTimeoutSeconds() {
        return this.ConversationTimeoutSeconds;
    }

    /**
     * @param value new value of ConversationTimeoutSeconds property
     */
    public final void setConversationTimeoutSeconds(int value) {
        this.ConversationTimeoutSeconds = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata Continues_metadata;
        private static final com.microsoft.bond.Metadata IsImmediate_metadata;
        private static final com.microsoft.bond.Metadata SuggestedPauseDelay_metadata;
        private static final com.microsoft.bond.Metadata ConversationTimeoutSeconds_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("MultiTurnBehavior");
            metadata.setQualified_name("org.stromberg.durandal.api.MultiTurnBehavior");


            // Continues
            Continues_metadata = new com.microsoft.bond.Metadata();
            Continues_metadata.setName("Continues");
            Continues_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Continues_metadata.getDefault_value().setUint_value(0);

            // IsImmediate
            IsImmediate_metadata = new com.microsoft.bond.Metadata();
            IsImmediate_metadata.setName("IsImmediate");
            IsImmediate_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            IsImmediate_metadata.getDefault_value().setUint_value(0);

            // SuggestedPauseDelay
            SuggestedPauseDelay_metadata = new com.microsoft.bond.Metadata();
            SuggestedPauseDelay_metadata.setName("SuggestedPauseDelay");
            SuggestedPauseDelay_metadata.getDefault_value().setInt_value(0);

            // ConversationTimeoutSeconds
            ConversationTimeoutSeconds_metadata = new com.microsoft.bond.Metadata();
            ConversationTimeoutSeconds_metadata.setName("ConversationTimeoutSeconds");
            ConversationTimeoutSeconds_metadata.getDefault_value().setInt_value(60);

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(Continues_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_BOOL);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(IsImmediate_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_BOOL);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(SuggestedPauseDelay_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(ConversationTimeoutSeconds_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.Continues;
            case (short)2:
                return this.IsImmediate;
            case (short)3:
                return this.SuggestedPauseDelay;
            case (short)4:
                return this.ConversationTimeoutSeconds;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.Continues = (Boolean)value;
                break;
            case (short)2:
                this.IsImmediate = (Boolean)value;
                break;
            case (short)3:
                this.SuggestedPauseDelay = (Integer)value;
                break;
            case (short)4:
                this.ConversationTimeoutSeconds = (Integer)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public MultiTurnBehavior() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("MultiTurnBehavior", "org.stromberg.durandal.api.MultiTurnBehavior");
    }

    protected void reset(String name, String qualifiedName) {
        
        Continues = false;
        IsImmediate = false;
        SuggestedPauseDelay = 0;
        ConversationTimeoutSeconds = 60;
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Continues = reader.readBool();
        }
        else
        {
            // throw new BondException("Missing required field \"Continues\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.IsImmediate = reader.readBool();
        }
        else
        {
            // throw new BondException("Missing required field \"IsImmediate\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.SuggestedPauseDelay = reader.readInt32();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ConversationTimeoutSeconds = reader.readInt32();
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(3);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    this.Continues = com.microsoft.bond.internal.ReadHelper.readBool(reader, fieldTag.type);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    this.IsImmediate = com.microsoft.bond.internal.ReadHelper.readBool(reader, fieldTag.type);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    this.SuggestedPauseDelay = com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type);
                    break;
                case 4:
                    this.ConversationTimeoutSeconds = com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_BOOL, 1, Schema.Continues_metadata);
        writer.writeBool(Continues);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_BOOL, 2, Schema.IsImmediate_metadata);
        writer.writeBool(IsImmediate);
        writer.writeFieldEnd();

        if (!canOmitFields || (SuggestedPauseDelay != Schema.SuggestedPauseDelay_metadata.getDefault_value().getInt_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 3, Schema.SuggestedPauseDelay_metadata);
            writer.writeInt32(SuggestedPauseDelay);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_INT32, 3, Schema.SuggestedPauseDelay_metadata);
        }

        if (!canOmitFields || (ConversationTimeoutSeconds != Schema.ConversationTimeoutSeconds_metadata.getDefault_value().getInt_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 4, Schema.ConversationTimeoutSeconds_metadata);
            writer.writeInt32(ConversationTimeoutSeconds);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_INT32, 4, Schema.ConversationTimeoutSeconds_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        MultiTurnBehavior that = (MultiTurnBehavior)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(MultiTurnBehavior that) {
        boolean equals = true;
        
        equals = equals && (this.Continues == that.Continues);
        equals = equals && (this.IsImmediate == that.IsImmediate);
        equals = equals && (this.SuggestedPauseDelay == that.SuggestedPauseDelay);
        equals = equals && (this.ConversationTimeoutSeconds == that.ConversationTimeoutSeconds);
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(MultiTurnBehavior that) {
        boolean equals = true;
        
        return equals;
    } // memberwiseCompareDeep

}; // class MultiTurnBehavior
