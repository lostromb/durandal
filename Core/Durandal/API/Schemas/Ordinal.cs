using System;

namespace Durandal.API
{
    /// <summary>
    /// Represents an absolute or relative position, typically generated by a user's intent to select something
    /// ("Play the 1st one", "Show me the top result"). This field can have either a numeric or a referential value.
    /// If Type == OrdinalType.Number, then NumericValue will contain the 1-based number that was expressed.
    /// Otherwise, NumericValue is considered undefined, and it is up to you to write application logic to handle
    /// the cases for "top", "last", etc.
    /// </summary>
    public class Ordinal
    {
        public Ordinal(OrdinalType type, int numberValue)
        {
            Type = type;
            NumericValue = numberValue;
        }

        public OrdinalType Type;
        public int NumericValue;

        public static Ordinal Parse(string value)
        {
            int numericValue = -1;
            if (int.TryParse(value, out numericValue))
            {
                return new Ordinal(OrdinalType.Number, numericValue);
            }

            OrdinalType returnType;
            if (Enum.TryParse(value, true, out returnType))
            {
                return new Ordinal(returnType, -1);
            }
            return new Ordinal(OrdinalType.Unknown, -1);
        }
    }
}
