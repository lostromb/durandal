



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\LURequest.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* LURequest
*/
@SuppressWarnings("all")
public class LURequest implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required int32 ProtocolVersion
    private int ProtocolVersion;

    // 2: Required vector<org.stromberg.durandal.api.SpeechHypothesis> Utterances
    private java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> Utterances;

    // 3: Required org.stromberg.durandal.api.ClientContext Context
    private org.stromberg.durandal.api.ClientContext Context;

    // 4: Optional bool DoFullAnnotation
    private boolean DoFullAnnotation;

    // 5: Optional bool IsSpeechQuery
    private boolean IsSpeechQuery;

    // 6: Optional string TraceId
    private String TraceId;

    // 7: Optional vector<string> DomainScope
    private java.util.ArrayList<String> DomainScope;

    /**
     * @return current value of ProtocolVersion property
     */
    public final int getProtocolVersion() {
        return this.ProtocolVersion;
    }

    /**
     * @param value new value of ProtocolVersion property
     */
    public final void setProtocolVersion(int value) {
        this.ProtocolVersion = value;
    }

    /**
     * @return current value of Utterances property
     */
    public final java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> getUtterances() {
        return this.Utterances;
    }

    /**
     * @param value new value of Utterances property
     */
    public final void setUtterances(java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis> value) {
        this.Utterances = value;
    }

    /**
     * @return current value of Context property
     */
    public final org.stromberg.durandal.api.ClientContext getContext() {
        return this.Context;
    }

    /**
     * @param value new value of Context property
     */
    public final void setContext(org.stromberg.durandal.api.ClientContext value) {
        this.Context = value;
    }

    /**
     * @return current value of DoFullAnnotation property
     */
    public final boolean getDoFullAnnotation() {
        return this.DoFullAnnotation;
    }

    /**
     * @param value new value of DoFullAnnotation property
     */
    public final void setDoFullAnnotation(boolean value) {
        this.DoFullAnnotation = value;
    }

    /**
     * @return current value of IsSpeechQuery property
     */
    public final boolean getIsSpeechQuery() {
        return this.IsSpeechQuery;
    }

    /**
     * @param value new value of IsSpeechQuery property
     */
    public final void setIsSpeechQuery(boolean value) {
        this.IsSpeechQuery = value;
    }

    /**
     * @return current value of TraceId property
     */
    public final String getTraceId() {
        return this.TraceId;
    }

    /**
     * @param value new value of TraceId property
     */
    public final void setTraceId(String value) {
        this.TraceId = value;
    }

    /**
     * @return current value of DomainScope property
     */
    public final java.util.ArrayList<String> getDomainScope() {
        return this.DomainScope;
    }

    /**
     * @param value new value of DomainScope property
     */
    public final void setDomainScope(java.util.ArrayList<String> value) {
        this.DomainScope = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata ProtocolVersion_metadata;
        private static final com.microsoft.bond.Metadata Utterances_metadata;
        private static final com.microsoft.bond.Metadata Context_metadata;
        private static final com.microsoft.bond.Metadata DoFullAnnotation_metadata;
        private static final com.microsoft.bond.Metadata IsSpeechQuery_metadata;
        private static final com.microsoft.bond.Metadata TraceId_metadata;
        private static final com.microsoft.bond.Metadata DomainScope_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("LURequest");
            metadata.setQualified_name("org.stromberg.durandal.api.LURequest");


            // ProtocolVersion
            ProtocolVersion_metadata = new com.microsoft.bond.Metadata();
            ProtocolVersion_metadata.setName("ProtocolVersion");
            ProtocolVersion_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            ProtocolVersion_metadata.getDefault_value().setInt_value(6);

            // Utterances
            Utterances_metadata = new com.microsoft.bond.Metadata();
            Utterances_metadata.setName("Utterances");
            Utterances_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // Context
            Context_metadata = new com.microsoft.bond.Metadata();
            Context_metadata.setName("Context");
            Context_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // DoFullAnnotation
            DoFullAnnotation_metadata = new com.microsoft.bond.Metadata();
            DoFullAnnotation_metadata.setName("DoFullAnnotation");
            DoFullAnnotation_metadata.getDefault_value().setUint_value(1);

            // IsSpeechQuery
            IsSpeechQuery_metadata = new com.microsoft.bond.Metadata();
            IsSpeechQuery_metadata.setName("IsSpeechQuery");
            IsSpeechQuery_metadata.getDefault_value().setUint_value(0);

            // TraceId
            TraceId_metadata = new com.microsoft.bond.Metadata();
            TraceId_metadata.setName("TraceId");

            // DomainScope
            DomainScope_metadata = new com.microsoft.bond.Metadata();
            DomainScope_metadata.setName("DomainScope");

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(ProtocolVersion_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT32);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(Utterances_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.SpeechHypothesis.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(Context_metadata);
            field.setType(org.stromberg.durandal.api.ClientContext.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(DoFullAnnotation_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_BOOL);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)5);
            field.setMetadata(IsSpeechQuery_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_BOOL);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)6);
            field.setMetadata(TraceId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)7);
            field.setMetadata(DomainScope_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().getElement().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.ProtocolVersion;
            case (short)2:
                return this.Utterances;
            case (short)3:
                return this.Context;
            case (short)4:
                return this.DoFullAnnotation;
            case (short)5:
                return this.IsSpeechQuery;
            case (short)6:
                return this.TraceId;
            case (short)7:
                return this.DomainScope;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.ProtocolVersion = (Integer)value;
                break;
            case (short)2:
                this.Utterances = (java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis>)value;
                break;
            case (short)3:
                this.Context = (org.stromberg.durandal.api.ClientContext)value;
                break;
            case (short)4:
                this.DoFullAnnotation = (Boolean)value;
                break;
            case (short)5:
                this.IsSpeechQuery = (Boolean)value;
                break;
            case (short)6:
                this.TraceId = (String)value;
                break;
            case (short)7:
                this.DomainScope = (java.util.ArrayList<String>)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        if (org.stromberg.durandal.api.SpeechHypothesis.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.SpeechHypothesis();
        }

        if (org.stromberg.durandal.api.ClientContext.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.ClientContext();
        }

        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public LURequest() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("LURequest", "org.stromberg.durandal.api.LURequest");
    }

    protected void reset(String name, String qualifiedName) {
        
        ProtocolVersion = 6;
        if (Utterances == null) {
            Utterances = new java.util.ArrayList<org.stromberg.durandal.api.SpeechHypothesis>();
        } else {
            Utterances.clear();
        }
        Context = new org.stromberg.durandal.api.ClientContext();
        DoFullAnnotation = true;
        IsSpeechQuery = false;
        TraceId = "";
        if (DomainScope == null) {
            DomainScope = new java.util.ArrayList<String>();
        } else {
            DomainScope.clear();
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.ProtocolVersion = reader.readInt32();
        }
        else
        {
            // throw new BondException("Missing required field \"ProtocolVersion\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_Utterances(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }
        else
        {
            // throw new BondException("Missing required field \"Utterances\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Context.read(reader);
        }
        else
        {
            // throw new BondException("Missing required field \"Context\", id=3");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.DoFullAnnotation = reader.readBool();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.IsSpeechQuery = reader.readBool();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.TraceId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_DomainScope(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(4);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    this.ProtocolVersion = com.microsoft.bond.internal.ReadHelper.readInt32(reader, fieldTag.type);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    this.readFieldImpl_Utterances(reader, fieldTag.type);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    com.microsoft.bond.internal.ReadHelper.validateType(fieldTag.type, com.microsoft.bond.BondDataType.BT_STRUCT);
                    this.Context.readImpl(reader);
                    // seenRequiredFields.Set(3, true);
                    break;
                case 4:
                    this.DoFullAnnotation = com.microsoft.bond.internal.ReadHelper.readBool(reader, fieldTag.type);
                    break;
                case 5:
                    this.IsSpeechQuery = com.microsoft.bond.internal.ReadHelper.readBool(reader, fieldTag.type);
                    break;
                case 6:
                    this.TraceId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 7:
                    this.readFieldImpl_DomainScope(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    private void readFieldImpl_Utterances(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
        this.Utterances.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            org.stromberg.durandal.api.SpeechHypothesis element2 = new org.stromberg.durandal.api.SpeechHypothesis();
                element2.readImpl(reader);
            this.Utterances.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_Utterances


    private void readFieldImpl_DomainScope(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        this.DomainScope.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            String element2 = "";
                element2 = com.microsoft.bond.internal.ReadHelper.readString(reader, tag1.type);
            this.DomainScope.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_DomainScope


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT32, 1, Schema.ProtocolVersion_metadata);
        writer.writeInt32(ProtocolVersion);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 2, Schema.Utterances_metadata);
        int size2 = Utterances.size();
            writer.writeContainerBegin(size2, com.microsoft.bond.BondDataType.BT_STRUCT);
            for (org.stromberg.durandal.api.SpeechHypothesis item1 : Utterances) {
                item1.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRUCT, 3, Schema.Context_metadata);
        Context.writeImpl(writer, false);
        writer.writeFieldEnd();

        if (!canOmitFields || (DoFullAnnotation != (Schema.DoFullAnnotation_metadata.getDefault_value().getUint_value() != 0))) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_BOOL, 4, Schema.DoFullAnnotation_metadata);
            writer.writeBool(DoFullAnnotation);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_BOOL, 4, Schema.DoFullAnnotation_metadata);
        }

        if (!canOmitFields || (IsSpeechQuery != (Schema.IsSpeechQuery_metadata.getDefault_value().getUint_value() != 0))) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_BOOL, 5, Schema.IsSpeechQuery_metadata);
            writer.writeBool(IsSpeechQuery);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_BOOL, 5, Schema.IsSpeechQuery_metadata);
        }

        if (!canOmitFields || (TraceId != Schema.TraceId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 6, Schema.TraceId_metadata);
            writer.writeString(TraceId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 6, Schema.TraceId_metadata);
        }

        int size6 = (DomainScope.size());
        if (!canOmitFields || (size6 != 0)) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 7, Schema.DomainScope_metadata);
            writer.writeContainerBegin(size6, com.microsoft.bond.BondDataType.BT_STRING);
            for (String item7 : DomainScope) {
                writer.writeString(item7);
            }
            writer.writeContainerEnd();
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_LIST, 7, Schema.DomainScope_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        LURequest that = (LURequest)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(LURequest that) {
        boolean equals = true;
        
        equals = equals && (this.ProtocolVersion == that.ProtocolVersion);
        equals = equals && ((this.Utterances == null) == (that.Utterances == null));
        equals = equals && ((this.Utterances == null) ? true : (this.Utterances.size() == that.Utterances.size()));
        equals = equals && (this.DoFullAnnotation == that.DoFullAnnotation);
        equals = equals && (this.IsSpeechQuery == that.IsSpeechQuery);
        equals = equals && ((this.TraceId == null) == (that.TraceId == null));
        equals = equals && (this.TraceId == null ? true : (this.TraceId.length() == that.TraceId.length()));
        equals = equals && ((this.DomainScope == null) == (that.DomainScope == null));
        equals = equals && ((this.DomainScope == null) ? true : (this.DomainScope.size() == that.DomainScope.size()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(LURequest that) {
        boolean equals = true;
        
        if (equals && this.Utterances != null && this.Utterances.size() != 0) {
            for (int i1 = 0; i1 < this.Utterances.size(); ++i1) {
                org.stromberg.durandal.api.SpeechHypothesis val2 = this.Utterances.get(i1);
                org.stromberg.durandal.api.SpeechHypothesis val3 = that.Utterances.get(i1);
                equals = equals && ((val2 == null) == (val3 == null));
                equals = equals && (val2 == null ? true : val2.memberwiseCompare(val3));
                if (!equals) {
                    break;
                }
            }
        }
        equals = equals && (this.Context == null ? true : this.Context.memberwiseCompare(that.Context));
        equals = equals && (this.TraceId == null ? true : this.TraceId.equals(that.TraceId));
        if (equals && this.DomainScope != null && this.DomainScope.size() != 0) {
            for (int i4 = 0; i4 < this.DomainScope.size(); ++i4) {
                String val5 = this.DomainScope.get(i4);
                String val6 = that.DomainScope.get(i4);
                equals = equals && ((val5 == null) == (val6 == null));
                equals = equals && (val5 == null ? true : (val5.length() == val6.length()));
                equals = equals && (val5 == null ? true : val5.equals(val6));
                if (!equals) {
                    break;
                }
            }
        }
        return equals;
    } // memberwiseCompareDeep

}; // class LURequest
