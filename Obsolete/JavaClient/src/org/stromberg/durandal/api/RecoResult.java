



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : org\stromberg\durandal\api\RecoResult.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package org.stromberg.durandal.api;


/**
* Represents the completely annotated recognition result that is passed to each answer.
*/
@SuppressWarnings("all")
public class RecoResult implements com.microsoft.bond.BondSerializable, com.microsoft.bond.BondMirror {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 1: Required string Domain
    private String Domain;

    // 2: Required string Intent
    private String Intent;

    // 3: Required float Confidence
    private float Confidence;

    // 4: Required org.stromberg.durandal.api.Sentence Utterance
    private org.stromberg.durandal.api.Sentence Utterance;

    // 5: Required vector<org.stromberg.durandal.api.TaggedData> TagHyps
    private java.util.ArrayList<org.stromberg.durandal.api.TaggedData> TagHyps;

    /**
     * @return current value of Domain property
     */
    public final String getDomain() {
        return this.Domain;
    }

    /**
     * @param value new value of Domain property
     */
    public final void setDomain(String value) {
        this.Domain = value;
    }

    /**
     * @return current value of Intent property
     */
    public final String getIntent() {
        return this.Intent;
    }

    /**
     * @param value new value of Intent property
     */
    public final void setIntent(String value) {
        this.Intent = value;
    }

    /**
     * @return current value of Confidence property
     */
    public final float getConfidence() {
        return this.Confidence;
    }

    /**
     * @param value new value of Confidence property
     */
    public final void setConfidence(float value) {
        this.Confidence = value;
    }

    /**
     * @return current value of Utterance property
     */
    public final org.stromberg.durandal.api.Sentence getUtterance() {
        return this.Utterance;
    }

    /**
     * @param value new value of Utterance property
     */
    public final void setUtterance(org.stromberg.durandal.api.Sentence value) {
        this.Utterance = value;
    }

    /**
     * @return current value of TagHyps property
     */
    public final java.util.ArrayList<org.stromberg.durandal.api.TaggedData> getTagHyps() {
        return this.TagHyps;
    }

    /**
     * @param value new value of TagHyps property
     */
    public final void setTagHyps(java.util.ArrayList<org.stromberg.durandal.api.TaggedData> value) {
        this.TagHyps = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata Domain_metadata;
        private static final com.microsoft.bond.Metadata Intent_metadata;
        private static final com.microsoft.bond.Metadata Confidence_metadata;
        private static final com.microsoft.bond.Metadata Utterance_metadata;
        private static final com.microsoft.bond.Metadata TagHyps_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("RecoResult");
            metadata.setQualified_name("org.stromberg.durandal.api.RecoResult");


            // Domain
            Domain_metadata = new com.microsoft.bond.Metadata();
            Domain_metadata.setName("Domain");
            Domain_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Domain_metadata.getDefault_value().setString_value("");

            // Intent
            Intent_metadata = new com.microsoft.bond.Metadata();
            Intent_metadata.setName("Intent");
            Intent_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Intent_metadata.getDefault_value().setString_value("");

            // Confidence
            Confidence_metadata = new com.microsoft.bond.Metadata();
            Confidence_metadata.setName("Confidence");
            Confidence_metadata.setModifier(com.microsoft.bond.Modifier.Required);
            Confidence_metadata.getDefault_value().setDouble_value(0);

            // Utterance
            Utterance_metadata = new com.microsoft.bond.Metadata();
            Utterance_metadata.setName("Utterance");
            Utterance_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            // TagHyps
            TagHyps_metadata = new com.microsoft.bond.Metadata();
            TagHyps_metadata.setName("TagHyps");
            TagHyps_metadata.setModifier(com.microsoft.bond.Modifier.Required);

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)1);
            field.setMetadata(Domain_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)2);
            field.setMetadata(Intent_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)3);
            field.setMetadata(Confidence_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_FLOAT);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)4);
            field.setMetadata(Utterance_metadata);
            field.setType(org.stromberg.durandal.api.Sentence.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)5);
            field.setMetadata(TagHyps_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_LIST);
            field.getType().setElement(new com.microsoft.bond.TypeDef());
            field.getType().setElement(org.stromberg.durandal.api.TaggedData.Schema.getTypeDef(schema));
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)1:
                return this.Domain;
            case (short)2:
                return this.Intent;
            case (short)3:
                return this.Confidence;
            case (short)4:
                return this.Utterance;
            case (short)5:
                return this.TagHyps;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)1:
                this.Domain = (String)value;
                break;
            case (short)2:
                this.Intent = (String)value;
                break;
            case (short)3:
                this.Confidence = (Float)value;
                break;
            case (short)4:
                this.Utterance = (org.stromberg.durandal.api.Sentence)value;
                break;
            case (short)5:
                this.TagHyps = (java.util.ArrayList<org.stromberg.durandal.api.TaggedData>)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        if (org.stromberg.durandal.api.Sentence.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.Sentence();
        }

        if (org.stromberg.durandal.api.TaggedData.Schema.metadata == structDef.getMetadata()) {
            return new org.stromberg.durandal.api.TaggedData();
        }

        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }

    // Constructor
    public RecoResult() {
        reset();
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("RecoResult", "org.stromberg.durandal.api.RecoResult");
    }

    protected void reset(String name, String qualifiedName) {
        
        Domain = "";
        Intent = "";
        Confidence = 0f;
        Utterance = new org.stromberg.durandal.api.Sentence();
        if (TagHyps == null) {
            TagHyps = new java.util.ArrayList<org.stromberg.durandal.api.TaggedData>();
        } else {
            TagHyps.clear();
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readImpl(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readImpl(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Domain = reader.readString();
        }
        else
        {
            // throw new BondException("Missing required field \"Domain\", id=1");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Intent = reader.readString();
        }
        else
        {
            // throw new BondException("Missing required field \"Intent\", id=2");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Confidence = reader.readFloat();
        }
        else
        {
            // throw new BondException("Missing required field \"Confidence\", id=3");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.Utterance.read(reader);
        }
        else
        {
            // throw new BondException("Missing required field \"Utterance\", id=4");
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.readFieldImpl_TagHyps(reader, com.microsoft.bond.BondDataType.BT_LIST);
        }
        else
        {
            // throw new BondException("Missing required field \"TagHyps\", id=5");
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        // BitArray seenRequiredFields = new BitArray(6);

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 1:
                    this.Domain = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    // seenRequiredFields.Set(1, true);
                    break;
                case 2:
                    this.Intent = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    // seenRequiredFields.Set(2, true);
                    break;
                case 3:
                    this.Confidence = com.microsoft.bond.internal.ReadHelper.readFloat(reader, fieldTag.type);
                    // seenRequiredFields.Set(3, true);
                    break;
                case 4:
                    com.microsoft.bond.internal.ReadHelper.validateType(fieldTag.type, com.microsoft.bond.BondDataType.BT_STRUCT);
                    this.Utterance.readImpl(reader);
                    // seenRequiredFields.Set(4, true);
                    break;
                case 5:
                    this.readFieldImpl_TagHyps(reader, fieldTag.type);
                    // seenRequiredFields.Set(5, true);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        //checkRequiredFieldsAreSeen(seenRequiredFields);
        return isPartial;
    }


    private void readFieldImpl_TagHyps(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondDataType typeInPayload) throws java.io.IOException {
        com.microsoft.bond.internal.ReadHelper.validateType(typeInPayload, com.microsoft.bond.BondDataType.BT_LIST);
        com.microsoft.bond.ProtocolReader.ListTag tag1 = reader.readContainerBegin();
        com.microsoft.bond.internal.ReadHelper.validateType(tag1.type, com.microsoft.bond.BondDataType.BT_STRUCT);
        this.TagHyps.ensureCapacity(tag1.size);
    
        for (int i3 = 0; i3 < tag1.size; i3++) {
            org.stromberg.durandal.api.TaggedData element2 = new org.stromberg.durandal.api.TaggedData();
                element2.readImpl(reader);
            this.TagHyps.add(element2);
        }
    
        reader.readContainerEnd();
    } // readFieldImpl_TagHyps


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeImpl(firstPassWriter, false);
            writeImpl(writer, false);
        }
        else
        {
          writeImpl(writer, false);
        }
        writer.writeEnd();
    }

    public void writeImpl(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 1, Schema.Domain_metadata);
        writer.writeString(Domain);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 2, Schema.Intent_metadata);
        writer.writeString(Intent);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_FLOAT, 3, Schema.Confidence_metadata);
        writer.writeFloat(Confidence);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRUCT, 4, Schema.Utterance_metadata);
        Utterance.writeImpl(writer, false);
        writer.writeFieldEnd();

        writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_LIST, 5, Schema.TagHyps_metadata);
        int size2 = TagHyps.size();
            writer.writeContainerBegin(size2, com.microsoft.bond.BondDataType.BT_STRUCT);
            for (org.stromberg.durandal.api.TaggedData item1 : TagHyps) {
                item1.writeImpl(writer, false);
            }
            writer.writeContainerEnd();
        writer.writeFieldEnd();

        writer.writeStructEnd(isBase);
    } // writeImpl


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        RecoResult that = (RecoResult)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(RecoResult that) {
        boolean equals = true;
        
        equals = equals && ((this.Domain == null) == (that.Domain == null));
        equals = equals && (this.Domain == null ? true : (this.Domain.length() == that.Domain.length()));
        equals = equals && ((this.Intent == null) == (that.Intent == null));
        equals = equals && (this.Intent == null ? true : (this.Intent.length() == that.Intent.length()));
        equals = equals && (Float.isNaN(this.Confidence) ? Float.isNaN(that.Confidence) : (this.Confidence == that.Confidence));
        equals = equals && ((this.TagHyps == null) == (that.TagHyps == null));
        equals = equals && ((this.TagHyps == null) ? true : (this.TagHyps.size() == that.TagHyps.size()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(RecoResult that) {
        boolean equals = true;
        
        equals = equals && (this.Domain == null ? true : this.Domain.equals(that.Domain));
        equals = equals && (this.Intent == null ? true : this.Intent.equals(that.Intent));
        equals = equals && (this.Utterance == null ? true : this.Utterance.memberwiseCompare(that.Utterance));
        if (equals && this.TagHyps != null && this.TagHyps.size() != 0) {
            for (int i1 = 0; i1 < this.TagHyps.size(); ++i1) {
                org.stromberg.durandal.api.TaggedData val2 = this.TagHyps.get(i1);
                org.stromberg.durandal.api.TaggedData val3 = that.TagHyps.get(i1);
                equals = equals && ((val2 == null) == (val3 == null));
                equals = equals && (val2 == null ? true : val2.memberwiseCompare(val3));
                if (!equals) {
                    break;
                }
            }
        }
        return equals;
    } // memberwiseCompareDeep

}; // class RecoResult
