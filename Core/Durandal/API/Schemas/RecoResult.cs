
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.10.0.0
//   File : Durandal.API.RecoResult_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace Durandal.API
{
    using Durandal.Common.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public class RecoResult : IComparable<RecoResult>
    {
        public string Domain { get; set; }

        public string Intent { get; set; }

        public float Confidence { get; set; }

        public Sentence Utterance { get; set; }

        public List<TaggedData> TagHyps { get; set; }

        public string Source { get; set; }
        
        public RecoResult()
        {
            Domain = "";
            Intent = "";
            Confidence = 0.0F;
            Utterance = new Sentence();
            TagHyps = new List<TaggedData>();
            Source = "";
        }

        /// <summary>
        /// Gets the highest-ranked tag hypothesis from the set of TagHyps, or null
        /// </summary>
        [JsonIgnore]
        public TaggedData MostLikelyTags
        {
            get
            {
                if (TagHyps.Count == 0)
                    return null;
                return TagHyps.FirstOrDefault();
            }
        }

        /// <summary>
        /// Returns a deep copy of this reco result
        /// </summary>
        /// <returns></returns>
        public RecoResult Clone()
        {
            RecoResult clone = new RecoResult();
            clone.Domain = this.Domain;
            clone.Intent = this.Intent;
            clone.Confidence = this.Confidence;
            clone.Source = this.Source;
            clone.Utterance = this.Utterance.Clone();
            foreach (var hyp in this.TagHyps)
            {
                clone.TagHyps.Add(hyp.Clone());
            }
            return clone;
        }

        public override string ToString()
        {
            return string.Format("{0}/{1}/{2}", Domain, Intent, Confidence);
        }

        public int CompareTo(RecoResult other)
        {
            return (int)Math.Sign(other.Confidence - this.Confidence);
        }
    }
} // Durandal.API
